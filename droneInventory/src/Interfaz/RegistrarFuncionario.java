
package Interfaz;
import Dominio.Funcionario;
import Dominio.Sistema;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.table.*;
import javax.swing.ButtonGroup;
import javax.swing.JRadioButton;

/**
 *@autor Kevin Helle - Estudiante: 208084;
 *@autor  Renato Rios - Estudiante: 270586;
 */
public class RegistrarFuncionario extends javax.swing.JFrame implements Observer {
    
    public static DefaultTableModel defaultTableModel = new DefaultTableModel();

    public RegistrarFuncionario(Sistema unSistema) {
        
        modelo = unSistema;
        modelo.addObserver(this);
        initComponents();
        // centrar ventana
        this.setLocationRelativeTo(null); 
        String[] titulosCol = new String[]{"Nombre", "Edad", "Número de funcionario"};

        //tabla
        defaultTableModel.setColumnIdentifiers(titulosCol);
        
        //Para que las celdas de la tabla no sean editables
        tblFuncionarios.setDefaultEditor(Object.class, null);

        //Se asigna cada titulo a una columna de la tabla
        tblFuncionarios.setModel(defaultTableModel);
        agregarFuncionariosEnTabla();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GrupoDeBotones = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtEdad = new javax.swing.JTextField();
        txtNumeroDeFuncionario = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFuncionarios = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        rbOrdenarDeMayorMenor = new javax.swing.JRadioButton();
        rbOrdenarDeMenorMayor = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registrar Funcionario");

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nº de funcionario");

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Edad");

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nombre");

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        txtEdad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEdadActionPerformed(evt);
            }
        });

        tblFuncionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblFuncionarios);

        btnAgregar.setBackground(new java.awt.Color(153, 255, 153));
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        rbOrdenarDeMayorMenor.setBackground(new java.awt.Color(0, 0, 0));
        GrupoDeBotones.add(rbOrdenarDeMayorMenor);
        rbOrdenarDeMayorMenor.setForeground(new java.awt.Color(255, 255, 255));
        rbOrdenarDeMayorMenor.setText("Ordenar de mayor a menor");
        rbOrdenarDeMayorMenor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbOrdenarDeMayorMenorActionPerformed(evt);
            }
        });

        rbOrdenarDeMenorMayor.setBackground(new java.awt.Color(0, 0, 0));
        GrupoDeBotones.add(rbOrdenarDeMenorMayor);
        rbOrdenarDeMenorMayor.setForeground(new java.awt.Color(255, 255, 255));
        rbOrdenarDeMenorMayor.setText("Ordenar de menor a mayor");
        rbOrdenarDeMenorMayor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbOrdenarDeMenorMayorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombre)
                            .addComponent(txtEdad, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addComponent(txtNumeroDeFuncionario))
                        .addGap(27, 27, 27))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbOrdenarDeMenorMayor)
                            .addComponent(rbOrdenarDeMayorMenor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNumeroDeFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(btnAgregar)
                .addGap(38, 38, 38)
                .addComponent(rbOrdenarDeMayorMenor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbOrdenarDeMenorMayor)
                .addGap(92, 92, 92))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtEdadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEdadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEdadActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        
        String nombre = txtNombre.getText();
        HashMap<Integer,Integer> funcionarios = modelo.getFuncionarios();
        
        //El metodo muestra un mensaje de error si se ingresa un string o el nro no esta en el rango valido
        try{ 
            boolean ok = true;            
            int edad = Integer.parseInt(txtEdad.getText());
            int numeroDeFuncionario = Integer.parseInt (txtNumeroDeFuncionario.getText());           
            
            
            if(nombre.isEmpty()){
                mostrarMensajeError("Se deben de completar todos los campos.");
            }else{
                //Si la edad ingresada no esta en el rango valido, se vuelve a pedir
                if(edad < 0 || edad > 100){

                    mostrarMensajeError("La edad debe ser un número entre 0 y 100.");
                    txtEdad.setText(null);
                    txtEdad.requestFocus();
                    ok = false;
                } else {
                    //Si el numero de funcionario ya fue ingresado, se muestra un mensaje de error
                    if(funcionarios.containsKey(numeroDeFuncionario)){
                        mostrarMensajeError("El número de funcionario ya se encuentra ingresado.");
                        txtNumeroDeFuncionario.setText(null);
                        txtNumeroDeFuncionario.requestFocus();
                        ok = false;
                    }
                }
                
                if(ok){                    
                    
                    modelo.crearFuncionario(nombre, edad, numeroDeFuncionario);
                    
                    //Se carga el nro de funcionario en el hashmap
                    funcionarios.put(numeroDeFuncionario, 1);

                    agregarFuncionariosEnTabla();

                    JOptionPane.showMessageDialog(this, "El funcionario ha sido ingresado correctamente", "Información", JOptionPane.INFORMATION_MESSAGE);
                    //Se limpian los inputs
                    limpiarInputs();
                }
            }
            
        }catch(NumberFormatException e){
            
            //mostrarMensajeDatoIncorrecto();
            mostrarMensajeError("En los campos edad y número de funcionario ingresar solo números.");

        }
          
    }//GEN-LAST:event_btnAgregarActionPerformed
    
    public void limpiarInputs(){
        txtNombre.setText(null);
        txtEdad.setText(null);
        txtNumeroDeFuncionario.setText(null);
    }
    
    public void mostrarMensajeError(String mensaje){
        Object[] opciones = {"Aceptar", "Cancelar"};
        
        JOptionPane.showOptionDialog(rootPane, mensaje, "Error",
        JOptionPane.OK_CANCEL_OPTION,
        JOptionPane.ERROR_MESSAGE, null, opciones, "Aceptar");
    }    
    
    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void rbOrdenarDeMayorMenorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbOrdenarDeMayorMenorActionPerformed
        Collections.sort(modelo.getListaFuncionarios(),(f1,f2)->f2.getEdad()-f1.getEdad());
        agregarFuncionariosEnTabla();
    }//GEN-LAST:event_rbOrdenarDeMayorMenorActionPerformed

    private void rbOrdenarDeMenorMayorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbOrdenarDeMenorMayorActionPerformed
        Collections.sort(modelo.getListaFuncionarios(),(f1,f2)->f1.getEdad()-f2.getEdad());
        agregarFuncionariosEnTabla();
    }//GEN-LAST:event_rbOrdenarDeMenorMayorActionPerformed

    public void agregarFuncionariosEnTabla() {
        defaultTableModel.setRowCount(0);
        ArrayList<Funcionario> listaFuncionarios = modelo.getListaFuncionarios();
        
        for (int i = 0; i < listaFuncionarios.size(); i++) {
            Funcionario funcionario =  listaFuncionarios.get(i);

            defaultTableModel.addRow(new Object[]{
                funcionario.getNombre(), funcionario.getEdad(), funcionario.getNumeroFuncionario()
            });
        }
    }
  
    @Override
    public void update (Observable o, Object arg){
        agregarFuncionariosEnTabla();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup GrupoDeBotones;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbOrdenarDeMayorMenor;
    private javax.swing.JRadioButton rbOrdenarDeMenorMayor;
    private javax.swing.JTable tblFuncionarios;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumeroDeFuncionario;
    // End of variables declaration//GEN-END:variables
    
    private Sistema modelo;
}
