package Interfaz;

import Dominio.Articulo;
import Dominio.Sistema;
import Persistencia.Persistir;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.table.*;

/**
 *@autor Kevin Helle - Estudiante: 208084;
 *@autor  Renato Rios - Estudiante: 270586;
 */
public class RegistrarArticulo extends javax.swing.JFrame implements Observer{
    
    public static DefaultTableModel defaultTableModel = new DefaultTableModel();

    public RegistrarArticulo(Sistema unSistema) {
        
        modelo = unSistema;
        modelo.addObserver(this);
        initComponents();
        // centrar ventana
        this.setLocationRelativeTo(null); 
        //Se almacenan los titulos de cada columna
        String [] titulosCol = new String [] {"Nombre","Descripción"};        
        defaultTableModel.setColumnIdentifiers(titulosCol);
        
        //Para que las celdas de la tabla no sean editables
        tblArticulo.setDefaultEditor(Object.class, null);
        
        //Se asigna cada titulo a una columna de la tabla
        tblArticulo.setModel(defaultTableModel);

        agregarArticulosEnTabla();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblNombre = new javax.swing.JLabel();
        lblDescripcion = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblArticulo = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registrar Articulo");
        setBackground(new java.awt.Color(0, 0, 0));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblNombre.setForeground(new java.awt.Color(255, 255, 255));
        lblNombre.setText("Nombre");

        lblDescripcion.setForeground(new java.awt.Color(255, 255, 255));
        lblDescripcion.setText("Descripción");

        btnAgregar.setBackground(new java.awt.Color(153, 255, 153));
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        tblArticulo.setBackground(new java.awt.Color(204, 204, 204));
        tblArticulo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblArticulo);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNombre)
                    .addComponent(lblDescripcion))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDescripcion)
                    .addComponent(txtNombre)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNombre)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDescripcion))
                        .addGap(34, 34, 34)
                        .addComponent(btnAgregar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String nombre = txtNombre.getText();
        nombre = nombre.toUpperCase();

        String descripcion = txtDescripcion.getText();
        HashMap<String,Integer> articulos = modelo.getArticulos();
        
        if(articulos.containsKey(nombre)){
            mostrarMensajeArticuloRepetido();
            txtNombre.setText(null);
            txtNombre.requestFocus();
        } else {

            //Se valida que todos los campos se ingresen
            if(nombre.isEmpty() || descripcion.isEmpty()){
                mostrarMensajeCamposObligatorios();
            }else{
                modelo.crearArticulo(nombre,descripcion);
                
                //Se agrega el nombre del articulo al HashMap
                modelo.getArticulos().put(nombre, 1);

                agregarArticulosEnTabla();
                JOptionPane.showMessageDialog(this, "El articulo ha sido ingresado correctamente", "Información", JOptionPane.INFORMATION_MESSAGE);

                //Se limpia en contenido de los inputs
                limpiarInputs();
            }
           
        }

        
    }//GEN-LAST:event_btnAgregarActionPerformed
   
    public void limpiarInputs(){
        txtNombre.setText(null);
        txtDescripcion.setText(null);
    }
    
    public void mostrarMensajeArticuloRepetido(){
        Object[] opciones = {"Aceptar", "Cancelar"};
        
        JOptionPane.showOptionDialog(rootPane, "No se puede ingresar un nombre ya existente.", "Error",
        JOptionPane.OK_CANCEL_OPTION,
        JOptionPane.ERROR_MESSAGE, null, opciones, "Aceptar");
        txtNombre.setText(null);
        txtNombre.requestFocus();
    }
    
    public void mostrarMensajeCamposObligatorios(){
        Object[] opciones = {"Aceptar", "Cancelar"};
        
        JOptionPane.showOptionDialog(rootPane, "Se deben de completar todos los campos.", "Error",
        JOptionPane.OK_CANCEL_OPTION,
        JOptionPane.ERROR_MESSAGE, null, opciones, "Aceptar");
    }     
    
    public void agregarArticulosEnTabla() {
        RegistrarArticulo.defaultTableModel.setRowCount(0);
        ArrayList<Articulo> listaArticulos = modelo.getListaArticulos();
        
        for (int i = 0; i < listaArticulos.size(); i++) {
            
            Articulo articulo =  listaArticulos.get(i);
            
            defaultTableModel.addRow(new Object[]{
                articulo.getNombre(), articulo.getDescripcion()
            });
        }
    }
    
    @Override
    public void update (Observable o, Object arg){
        agregarArticulosEnTabla();
    }
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JTable tblArticulo;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
    
    private Sistema modelo;

}
