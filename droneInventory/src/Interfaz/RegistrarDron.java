package Interfaz;

import Dominio.Dron;
import Dominio.Sistema;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.table.*;

/**
 * @autor Kevin Helle - Estudiante: 208084;
 * @autor Renato Rios - Estudiante: 270586;
 */
public class RegistrarDron extends javax.swing.JFrame implements Observer{

    public static DefaultTableModel defaultTableModel = new DefaultTableModel();
    
    public RegistrarDron(Sistema unSistema) {

        modelo = unSistema;
        modelo.addObserver(this);
        initComponents();
        // centrar ventana
        this.setLocationRelativeTo(null);
        String[] titulosCol = new String[]{"Identificaci칩n", "Modelo", "Tipo de c치mara"};

        //tabla
        defaultTableModel.setColumnIdentifiers(titulosCol);
        
        //Para que las celdas de la tabla no sean editables
        tblDrones.setDefaultEditor(Object.class, null);
        
        //Se asigna cada titulo a una columna de la tabla
        tblDrones.setModel(defaultTableModel);
        agregarDronesEnTabla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtIdentificacion = new javax.swing.JTextField();
        txtModeloDron = new javax.swing.JTextField();
        txtTipoDeCamara = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDrones = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registrar dron");
        setBackground(new java.awt.Color(0, 0, 0));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Tipo de c치mara");

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Modelo");

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Identificaci칩n");

        txtModeloDron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModeloDronActionPerformed(evt);
            }
        });

        tblDrones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDrones);
        if (tblDrones.getColumnModel().getColumnCount() > 0) {
            tblDrones.getColumnModel().getColumn(0).setResizable(false);
            tblDrones.getColumnModel().getColumn(1).setResizable(false);
            tblDrones.getColumnModel().getColumn(2).setResizable(false);
        }

        btnAgregar.setBackground(new java.awt.Color(153, 255, 153));
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtIdentificacion, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(txtTipoDeCamara)
                    .addComponent(txtModeloDron, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(52, 52, 52))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtModeloDron, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTipoDeCamara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addComponent(btnAgregar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtModeloDronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModeloDronActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModeloDronActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        
        String identificacion = txtIdentificacion.getText();
        String modeloDron = txtModeloDron.getText();
            
        try {
            
            
            int tipoDeCamara = Integer.parseInt(txtTipoDeCamara.getText());
            
            
            if(identificacion.isEmpty() || modeloDron.isEmpty()){
                mostrarMensajeError("Debe de completar todos los campos.");
            }else{
                if (tipoDeCamara < 0 || tipoDeCamara > 6) {
                    mostrarMensajeError("El numero de camara es invalido, debe estar entre 1 y 6.");
                    txtTipoDeCamara.setText(null);
                    txtTipoDeCamara.requestFocus();
                } else {
                    modelo.crearDron(identificacion, modeloDron, tipoDeCamara);
                                        
                    agregarDronesEnTabla();
                    JOptionPane.showMessageDialog(this, "El dron ha sido ingresado correctamente", "Informaci칩n", JOptionPane.INFORMATION_MESSAGE);

                    //Se limpian los inputs
                    limpiarInputs();
                }
            }
            
        } catch (NumberFormatException e) {
            if(identificacion.isEmpty() || modeloDron.isEmpty()){
                mostrarMensajeError("Debe de completar todos los campos.");
            }
            mostrarMensajeError("Tipo de camara debe ser un numero entre 1 y 6.");
            txtTipoDeCamara.setText(null);
            txtTipoDeCamara.requestFocus();
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    public void limpiarInputs() {
        txtIdentificacion.setText(null);
        txtModeloDron.setText(null);
        txtTipoDeCamara.setText(null);
    }

    public void mostrarMensajeError(String mensaje) {
        Object[] opciones = {"Aceptar", "Cancelar"};

        JOptionPane.showOptionDialog(rootPane, mensaje, "Error",
        JOptionPane.OK_CANCEL_OPTION,
        JOptionPane.ERROR_MESSAGE, null, opciones, "Aceptar");
    }

    public void agregarDronesEnTabla() {
        defaultTableModel.setRowCount(0);

        ArrayList<Dron> listaDrones = modelo.getListaDrones();

        for (int i = 0; i < listaDrones.size(); i++) {
            Dron dron = listaDrones.get(i);
            defaultTableModel.addRow(new Object[]{
                dron.getIdentificacion(), dron.getModelo(), dron.getTipoDeCamara()
            });
        }
    }
    
    @Override
    public void update (Observable o, Object arg){
       agregarDronesEnTabla();
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDrones;
    private javax.swing.JTextField txtIdentificacion;
    private javax.swing.JTextField txtModeloDron;
    private javax.swing.JTextField txtTipoDeCamara;
    // End of variables declaration//GEN-END:variables

    private Sistema modelo;
}
